<template>
  <div class="max-w-xl mx-auto p-2 ">
    <form @submit.prevent="handleSubmit" class="space-y-6">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700">
          Kompaniya nomi
        </label>
        <input
            id="name"
            type="text"
            v-model="newCompany.name"
            @blur="validateField('name')"
            class="mt-1 block w-full rounded-md border-gray-900 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        />
        <span v-if="errors.name" class="text-sm text-red-600">{{ errors.name }}</span>
      </div>

      <!-- Phone -->
      <div>
        <label for="phone" class="block text-sm font-medium text-gray-700">
          Phone
        </label>
        <input
            id="phone"
            type="text"
            v-model="newCompany.phone"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        />
      </div>

      <!-- Address -->
      <div>
        <label for="address" class="block text-sm font-medium text-gray-700">
          Address
        </label>
        <input
            id="address"
            type="text"
            v-model="newCompany.address"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        />
      </div>

      <!-- Description -->
      <div>
        <label for="description" class="block text-sm font-medium text-gray-700">
          Description
        </label>
        <textarea
            id="description"
            v-model="newCompany.description"
            rows="4"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        ></textarea>
      </div>

      <!-- Status -->
      <div>
        <label for="status" class="block text-sm font-medium text-gray-700">
          Status
        </label>
        <select
            id="status"
            v-model="newCompany.status"
            class="mt-1 block w-full rounded-md border-gray-300 bg-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        >
          <option value="active">Active</option>
          <option value="inactive">Inactive</option>
        </select>
      </div>

      <!-- Upload Image -->
      <div>
        <label for="image" class="block text-sm font-medium text-gray-700">
          Upload Image
        </label>
        <input
            id="image"
            type="file"
            @change="handleImageUpload"
            class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded file:border file:border-gray-300 file:text-sm file:font-medium file:bg-gray-50 file:text-gray-700 hover:file:bg-gray-100"
        />
        <span v-if="errors.image" class="text-sm text-red-600">{{ errors.image }}</span>
      </div>

      <!-- Submit Button -->
      <button
          type="submit"
          :disabled="!isFormValid"
          class="w-full py-2 px-4 bg-indigo-600 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
      >
        Submit
      </button>
    </form>
  </div>
</template>


<script>
import { reactive, computed } from "vue";
import { useStore } from "vuex";

export default {
  setup() {
    const store = useStore();
    const newCompany = reactive({
      name: "",
      phone: "",
      address: "",
      description: "",
      status: "active",
      image: null,
    });

    const errors = reactive({
      name: "",
    });

    const isFormValid = computed(() => {
      return !errors.name && newCompany.name.trim();
    });

    const validateField = (field) => {
      if (field === "name") {
        const value = newCompany.name.trim();
        if (!value) {
          errors.name = "Kompaniya nomi bo'sh bo'lmasligi kerak.";
        } else {
          errors.name = "";
        }
      }
    };

    const handleImageUpload = (event) => {
      const file = event.target.files[0];
      if (file && !['image/jpeg', 'image/png', 'image/jpg'].includes(file.type)) {
        errors.image = "Rasm faqat jpg, jpeg yoki png formatda bo'lishi kerak.";
        newCompany.image = null;
      } else {
        errors.image = "";
        newCompany.image = file;
      }
    };

    const handleSubmit = async () => {
      try {
        if (!isFormValid.value) {
          return;
        }

        const formData = new FormData();
        Object.entries(newCompany).forEach(([key, value]) => {
          if (value !== null && value !== "") {
            formData.append(key, value);
          }
        });

        await store.dispatch("company/addCompany", formData);

        Object.keys(newCompany).forEach((key) => {
          newCompany[key] = key === "status" ? "active" : "";
        });
        newCompany.image = null;
        errors.name = "";
      } catch (e) {
        console.error(e);
      }
    };

    return {
      newCompany,
      errors,
      validateField,
      handleSubmit,
      handleImageUpload,
      isFormValid,
    };
  },
};
</script>
